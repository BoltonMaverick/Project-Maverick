resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

resources:  
  - name: project-maverick
    type: git
    source:
      uri: https://github.com/BoltonMaverick/Project-Maverick.git
      branch: main  
      
        
  - name: infrastructure 
    type: terraform
    source:
      path: terraform
      env_name: dev
      backend_type: s3
      backend_config:
        bucket: project-maverick
        key: marverick/terraform.tfstate
        region: eu-west-2
        access_key: AKIAURKJIQQQRXYPJTFR
        secret_key: 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
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: AKIAURKJIQQQRXYPJTFR
        AWS_SECRET_ACCESS_KEY: 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
jobs:
  - name: terraform-plan
    plan:
    - get: project-maverick
    - put: infrastructure
      params:
        env_name: dev
        terraform_source: project-maverick/terraform
        plan_only: true
      

  - name: terraform-apply
    plan:
    - get: project-maverick
      trigger: true
      passed: [terraform-plan]
    - get: infrastructure
      trigger: true
      passed: [terraform-plan]
    - put: infrastructure
      params:
        env_name: dev
        terraform_source: project-maverick/terraform
        plan_run: true

    - task: terraform-apply 
      config:
        platform: linux 
        image_resource:
          type: docker-image
          source: { repository: ljfranklin/terraform-resource, tag: latest } 
        inputs:
            - name: project-maverick
        run: 
            path: sh
            args:
                - -c
                - |
                  cd project-maverick/terraform
                  terraform apply --auto-approve 
